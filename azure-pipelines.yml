jobs:

- job: 'tox'
  pool:
    vmImage: 'ubuntu-16.04'
  strategy:
    matrix:
      Python36:
        python.version: '3.6'
        TOXENV: 'py36'
      Python37:
        python.version: '3.7'
        TOXENV: 'py37'
  steps:
    - task: UsePythonVersion@0
      displayName: 'Use Python $(python.version)'
      inputs:
        versionSpec: '$(python.version)'

    - script: python -m pip install --upgrade pip && python -m pip install tox
      displayName: 'Install Tox'

    - script: tox -e $(TOXENV)
      displayName: 'Run Tox tests'

    - task: PublishTestResults@2
      inputs:
        testResultsFiles: '**/test-*.xml'
        testRunTitle: 'Publish test results for Python $(python.version)'
      condition: succeededOrFailed()

    - task: PublishCodeCoverageResults@1
      inputs:
        codeCoverageTool: Cobertura
        summaryFileLocation: '$(System.DefaultWorkingDirectory)/**/coverage.xml'
        reportDirectory: '$(System.DefaultWorkingDirectory)/**/htmlcov'


- job: 'flake8'
  pool:
    vmImage: 'ubuntu-16.04'
  steps:
    - task: UsePythonVersion@0
      displayName: 'Select python version'
      inputs:
        versionSpec: '3.7'
    - script: python -m pip install flake8 flake8-junit-report
      displayName: 'Install flake8'
    - script: flake8 atomica tests --exit-zero --output-file flake8.txt
      # Note - using --exit-zero will cause flake8 'errors' to show up as 'errors' in Azure Pipelines
      # but the test will have been considered to pass. Therefore, the overall tests suite will still
      # be considered to be passing as long as tox runs, and flake8 errors are just guidance for style
      condition: eq(variables['TOXENV'], 'py37')
      displayName: 'Run flake8'
    - script: flake8_junit flake8.txt flake8_junit.xml
      condition: eq(variables['TOXENV'], 'py37')
      displayName: 'Generate flake8 junit output'
    - task: PublishTestResults@2
      condition: eq(variables['TOXENV'], 'py37')
      inputs:
        testResultsFiles: '**/flake8_junit.xml'
        testRunTitle: 'Publish flake8 results'

- job: 'Build documentation'
  pool:
    vmImage: 'ubuntu-16.04'
  steps:
    - task: UsePythonVersion@0
      displayName: 'Select python version'
      inputs:
        versionSpec: '3.7'
    - script: python setup.py develop
      displayName: 'Install Atomica'
    - script: python -m pip install -r requirements.txt
      displayName: 'Install documentation requirements'
    - script: sudo apt install pandoc -y
      displayName: 'Install pandoc'
    - script: sphinx-build "docs" "docs/_build"
      displayName: 'Build documentation'
    - publish: docs/_build
      artifact: docs
      displayName: 'Publish documentation'

# TODO - Switch deployment over to Azure DevOps

#- job: 'deploy'
#  dependsOn: 'tox'
#  condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
#
#  steps:
#  - script: python setup.py build && python setup.py sdist
#    displayName: 'Build distribution'
#
#  - script: twine -upload -u $(pypi.username) -p $(pypi.password) dist/*
#    displayName: 'Upload using Twine'